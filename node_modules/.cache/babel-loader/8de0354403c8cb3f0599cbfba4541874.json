{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrakadabra\\\\kanban-copy\\\\src\\\\modules\\\\modals\\\\components\\\\ModalRoot.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ModalService from '../services/ModalService';\nimport styles from '../styles/ModalRoot.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalRoot = () => {\n  _s();\n\n  const [modal, setModal] = useState({});\n  /* \r\n   * useEffect will run when the component renders, which might be more times than you think.\r\n   * 2nd arg = If present, effect will only activate if the values in the list change.\r\n   */\n\n  useEffect(() => {\n    ModalService.on('open', _ref => {\n      let {\n        component,\n        props\n      } = _ref;\n      setModal({\n        component,\n        props,\n        close: value => {\n          setModal({});\n        }\n      });\n    });\n  }, []);\n  const ModalComponent = modal.component ? modal.component : null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    \"data-testid\": \"modal-root\",\n    className: modal.component ? styles.modalRoot : '',\n    children: ModalComponent && /*#__PURE__*/_jsxDEV(ModalComponent, { ...modal.props,\n      close: modal.close,\n      className: ModalComponent ? 'd-block' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalRoot, \"Sjk3zdaTW678urgfBmxWVqSKdtg=\");\n\n_c = ModalRoot;\nexport default ModalRoot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalRoot\");","map":{"version":3,"names":["useState","useEffect","ModalService","styles","ModalRoot","modal","setModal","on","component","props","close","value","ModalComponent","modalRoot"],"sources":["C:/Users/Abrakadabra/kanban-copy/src/modules/modals/components/ModalRoot.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport ModalService from '../services/ModalService';\r\nimport styles from '../styles/ModalRoot.module.css';\r\n\r\nconst ModalRoot=() => {\r\n\r\n  const [modal, setModal] = useState({});\r\n\r\n  /* \r\n   * useEffect will run when the component renders, which might be more times than you think.\r\n   * 2nd arg = If present, effect will only activate if the values in the list change.\r\n   */\r\n  useEffect(() => {\r\n    ModalService.on('open', ({ component, props }) => {\r\n      setModal({\r\n        component,\r\n        props,\r\n        close: value => {\r\n          setModal({});\r\n        },\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const ModalComponent = modal.component ? modal.component : null;\r\n\r\n  return (\r\n    <section data-testid=\"modal-root\" className={ modal.component ? styles.modalRoot : '' }>\r\n      \r\n      { ModalComponent && (\r\n        <ModalComponent\r\n          { ...modal.props }\r\n          close={ modal.close }\r\n          className={ ModalComponent ? 'd-block' : '' }\r\n        />\r\n      )}\r\n      \r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ModalRoot;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,SAAS,GAAC,MAAM;EAAA;;EAEpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EAEA;AACF;AACA;AACA;;EACEC,SAAS,CAAC,MAAM;IACdC,YAAY,CAACK,EAAb,CAAgB,MAAhB,EAAwB,QAA0B;MAAA,IAAzB;QAAEC,SAAF;QAAaC;MAAb,CAAyB;MAChDH,QAAQ,CAAC;QACPE,SADO;QAEPC,KAFO;QAGPC,KAAK,EAAEC,KAAK,IAAI;UACdL,QAAQ,CAAC,EAAD,CAAR;QACD;MALM,CAAD,CAAR;IAOD,CARD;EASD,CAVQ,EAUN,EAVM,CAAT;EAYA,MAAMM,cAAc,GAAGP,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAoC,IAA3D;EAEA,oBACE;IAAS,eAAY,YAArB;IAAkC,SAAS,EAAGH,KAAK,CAACG,SAAN,GAAkBL,MAAM,CAACU,SAAzB,GAAqC,EAAnF;IAAA,UAEID,cAAc,iBACd,QAAC,cAAD,OACOP,KAAK,CAACI,KADb;MAEE,KAAK,EAAGJ,KAAK,CAACK,KAFhB;MAGE,SAAS,EAAGE,cAAc,GAAG,SAAH,GAAe;IAH3C;MAAA;MAAA;MAAA;IAAA;EAHJ;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAnCD;;GAAMR,S;;KAAAA,S;AAqCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}