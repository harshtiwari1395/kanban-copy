{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Abrakadabra\\\\kanban-copy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Abrakadabra\\\\kanban-copy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abrakadabra\\\\kanban-copy\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport \"@lourenci/react-kanban/dist/styles.css\";\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals'; // Use your own styles to override the default styles\n//import \"./styles.css\";\n\nvar board = {\n  columns: [{\n    id: 1,\n    title: \"Backlog\",\n    backgroundColor: \"#fff\",\n    cards: [{\n      id: 1,\n      title: \"Card title 1\",\n      description: \"Card content\"\n    }, {\n      id: 2,\n      title: \"Card title 2\",\n      description: \"Card content\"\n    }, {\n      id: 3,\n      title: \"Card title 3\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 2,\n    title: \"Doing\",\n    cards: [{\n      id: 9,\n      title: \"Card title 9\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 3,\n    title: \"Q&A\",\n    cards: [{\n      id: 10,\n      title: \"Card title 10\",\n      description: \"Card content\"\n    }, {\n      id: 11,\n      title: \"Card title 11\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 4,\n    title: \"Production\",\n    cards: [{\n      id: 12,\n      title: \"Card title 12\",\n      description: \"Card content\"\n    }, {\n      id: 13,\n      title: \"Card title 13\",\n      description: \"Card content\"\n    }]\n  }]\n};\n\nfunction ControlledBoard() {\n  // You need to control the state yourself.\n  var _useState = useState(board),\n      _useState2 = _slicedToArray(_useState, 2),\n      controlledBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  function handleCardMove(_card, source, destination) {\n    var updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return /*#__PURE__*/React.createElement(Board, {\n    onCardDragEnd: handleCardMove,\n    disableColumnDrag: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, controlledBoard);\n}\n\nfunction UncontrolledBoard() {\n  return /*#__PURE__*/React.createElement(Board, {\n    allowRemoveLane: true,\n    allowRenameColumn: true,\n    allowRemoveCard: true,\n    onLaneRemove: console.log,\n    onCardRemove: console.log,\n    onLaneRename: console.log,\n    initialBoard: board,\n    allowAddCard: {\n      on: \"top\"\n    },\n    onNewCardConfirm: function onNewCardConfirm(draftCard) {\n      return _objectSpread({\n        id: new Date().getTime()\n      }, draftCard);\n    },\n    onCardNew: console.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Example of an uncontrolled board\"), /*#__PURE__*/React.createElement(UncontrolledBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Example of a controlled board\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Just the card moving is implemented in this demo.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"In this kind of board, you can do whatever you want. We just mirror your board state.\"), /*#__PURE__*/React.createElement(ControlledBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }\n}))); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","useState","Board","moveCard","ReactDOM","reportWebVitals","board","columns","id","title","backgroundColor","cards","description","ControlledBoard","controlledBoard","setBoard","handleCardMove","_card","source","destination","updatedBoard","UncontrolledBoard","console","log","on","draftCard","Date","getTime","App","root","createRoot","document","getElementById","render"],"sources":["C:/Users/Abrakadabra/kanban-copy/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport \"@lourenci/react-kanban/dist/styles.css\";\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\n// Use your own styles to override the default styles\n//import \"./styles.css\";\n\nconst board = {\n  columns: [\n    {\n      id: 1,\n      title: \"Backlog\",\n      backgroundColor: \"#fff\",\n      cards: [\n        {\n          id: 1,\n          title: \"Card title 1\",\n          description: \"Card content\"\n        },\n        {\n          id: 2,\n          title: \"Card title 2\",\n          description: \"Card content\"\n        },\n        {\n          id: 3,\n          title: \"Card title 3\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 2,\n      title: \"Doing\",\n      cards: [\n        {\n          id: 9,\n          title: \"Card title 9\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 3,\n      title: \"Q&A\",\n      cards: [\n        {\n          id: 10,\n          title: \"Card title 10\",\n          description: \"Card content\"\n        },\n        {\n          id: 11,\n          title: \"Card title 11\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 4,\n      title: \"Production\",\n      cards: [\n        {\n          id: 12,\n          title: \"Card title 12\",\n          description: \"Card content\"\n        },\n        {\n          id: 13,\n          title: \"Card title 13\",\n          description: \"Card content\"\n        }\n      ]\n    }\n  ]\n};\n\nfunction ControlledBoard() {\n  // You need to control the state yourself.\n  const [controlledBoard, setBoard] = useState(board);\n\n  function handleCardMove(_card, source, destination) {\n    const updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return (\n    <Board onCardDragEnd={handleCardMove} disableColumnDrag>\n      {controlledBoard}\n    </Board>\n  );\n}\n\nfunction UncontrolledBoard() {\n  return (\n    <Board\n      allowRemoveLane\n      allowRenameColumn\n      allowRemoveCard\n      onLaneRemove={console.log}\n      onCardRemove={console.log}\n      onLaneRename={console.log}\n      initialBoard={board}\n      allowAddCard={{ on: \"top\" }}\n      onNewCardConfirm={(draftCard) => ({\n        id: new Date().getTime(),\n        ...draftCard\n      })}\n      onCardNew={console.log}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <h4>Example of an uncontrolled board</h4>\n      <UncontrolledBoard />\n      <h4>Example of a controlled board</h4>\n      <p>Just the card moving is implemented in this demo.</p>\n      <p>\n        In this kind of board, you can do whatever you want. We just mirror your\n        board state.\n      </p>\n      <ControlledBoard />\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}