{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrakadabra\\\\kanban-copy\\\\src\\\\components\\\\KanbanBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KanbanBoard = _ref => {\n  _s();\n\n  let {\n    projects,\n    setProjects,\n    // setCurrentColumnId,\n    columns,\n    setColumns,\n    addTicket\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [draggedOverColumn, setDraggedOverColumn] = useState(0); //this is called when a Kanban card is dragged over a column (called by column)\n\n  const handleOnDragEnter = (e, stageValue) => {\n    setDraggedOverColumn(stageValue);\n  }; //this is called when a Kanban card dropped over a column (called by card)\n\n\n  const handleOnDragEnd = (e, project) => {\n    e.preventDefault();\n    const updatedProjects = projects.slice(0);\n    updatedProjects.find(projectObject => {\n      return projectObject.id === project.id;\n    }).project_stage = draggedOverColumn;\n    console.log(\"dragged\", updatedProjects);\n    setProjects(updatedProjects);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  }\n\n  console.log(\"cols\", columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\"\n    },\n    children: columns.map(column => {\n      return /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        name: column.name,\n        setProjects: setProjects,\n        stage: column.stage,\n        setColumns: setColumns,\n        projects: projects.filter(project => {\n          return project.project_stage === column.stage;\n        }),\n        onDragEnter: handleOnDragEnter,\n        onDragEnd: handleOnDragEnd,\n        // setCurrentColumnId={setCurrentColumnId}\n        addTicket: addTicket\n      }, column.stage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(KanbanBoard, \"2j1nHQ8ZLg7xIXWGKni++wot1vk=\");\n\n_c = KanbanBoard;\nexport default KanbanBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["useState","KanbanColumn","KanbanBoard","projects","setProjects","columns","setColumns","addTicket","isLoading","setIsLoading","draggedOverColumn","setDraggedOverColumn","handleOnDragEnter","e","stageValue","handleOnDragEnd","project","preventDefault","updatedProjects","slice","find","projectObject","id","project_stage","console","log","display","flexWrap","map","column","name","stage","filter"],"sources":["C:/Users/Abrakadabra/kanban-copy/src/components/KanbanBoard.jsx"],"sourcesContent":["import {useState} from \"react\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\nconst KanbanBoard = ({\r\n    projects,\r\n    setProjects,\r\n    // setCurrentColumnId,\r\n    columns,\r\n    setColumns,\r\n    addTicket,\r\n  }) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [draggedOverColumn, setDraggedOverColumn] = useState(0);\r\n    //this is called when a Kanban card is dragged over a column (called by column)\r\n    const handleOnDragEnter = (e, stageValue) => {\r\n      setDraggedOverColumn(stageValue);\r\n    };\r\n  \r\n    //this is called when a Kanban card dropped over a column (called by card)\r\n    const handleOnDragEnd = (e, project) => {\r\n      e.preventDefault();\r\n      const updatedProjects = projects.slice(0);\r\n      updatedProjects.find((projectObject) => {\r\n        return projectObject.id === project.id;\r\n      }).project_stage = draggedOverColumn;\r\n      console.log(\"dragged\", updatedProjects);\r\n      setProjects(updatedProjects);\r\n    };\r\n  \r\n    if (isLoading) {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n    console.log(\"cols\", columns);\r\n    return (\r\n      <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n        {columns.map((column) => {\r\n          return (\r\n            <KanbanColumn\r\n              name={column.name}\r\n              setProjects={setProjects}\r\n              stage={column.stage}\r\n              setColumns={setColumns}\r\n              projects={projects.filter((project) => {\r\n                return project.project_stage === column.stage;\r\n              })}\r\n              onDragEnter={handleOnDragEnter}\r\n              onDragEnd={handleOnDragEnd}\r\n              key={column.stage}\r\n              // setCurrentColumnId={setCurrentColumnId}\r\n              addTicket={addTicket}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default KanbanBoard;"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,WAAW,GAAG,QAOZ;EAAA;;EAAA,IAPa;IACjBC,QADiB;IAEjBC,WAFiB;IAGjB;IACAC,OAJiB;IAKjBC,UALiB;IAMjBC;EANiB,CAOb;EACJ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,CAAD,CAA1D,CAFI,CAGJ;;EACA,MAAMY,iBAAiB,GAAG,CAACC,CAAD,EAAIC,UAAJ,KAAmB;IAC3CH,oBAAoB,CAACG,UAAD,CAApB;EACD,CAFD,CAJI,CAQJ;;;EACA,MAAMC,eAAe,GAAG,CAACF,CAAD,EAAIG,OAAJ,KAAgB;IACtCH,CAAC,CAACI,cAAF;IACA,MAAMC,eAAe,GAAGf,QAAQ,CAACgB,KAAT,CAAe,CAAf,CAAxB;IACAD,eAAe,CAACE,IAAhB,CAAsBC,aAAD,IAAmB;MACtC,OAAOA,aAAa,CAACC,EAAd,KAAqBN,OAAO,CAACM,EAApC;IACD,CAFD,EAEGC,aAFH,GAEmBb,iBAFnB;IAGAc,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,eAAvB;IACAd,WAAW,CAACc,eAAD,CAAX;EACD,CARD;;EAUA,IAAIV,SAAJ,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACDgB,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBpB,OAApB;EACA,oBACE;IAAK,KAAK,EAAE;MAAEqB,OAAO,EAAE,MAAX;MAAmBC,QAAQ,EAAE;IAA7B,CAAZ;IAAA,UACGtB,OAAO,CAACuB,GAAR,CAAaC,MAAD,IAAY;MACvB,oBACE,QAAC,YAAD;QACE,IAAI,EAAEA,MAAM,CAACC,IADf;QAEE,WAAW,EAAE1B,WAFf;QAGE,KAAK,EAAEyB,MAAM,CAACE,KAHhB;QAIE,UAAU,EAAEzB,UAJd;QAKE,QAAQ,EAAEH,QAAQ,CAAC6B,MAAT,CAAiBhB,OAAD,IAAa;UACrC,OAAOA,OAAO,CAACO,aAAR,KAA0BM,MAAM,CAACE,KAAxC;QACD,CAFS,CALZ;QAQE,WAAW,EAAEnB,iBARf;QASE,SAAS,EAAEG,eATb;QAWE;QACA,SAAS,EAAER;MAZb,GAUOsB,MAAM,CAACE,KAVd;QAAA;QAAA;QAAA;MAAA,QADF;IAgBD,CAjBA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CApDH;;GAAM7B,W;;KAAAA,W;AAsDJ,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}